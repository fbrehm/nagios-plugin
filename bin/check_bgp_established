#!/bin/bash

PROGNAME="${0##*/}"
PROGPATH="${0%/*}"
REVISION="0.1.0"

# ProfitBricks checks are in /usr/lib/nagios/plugins/pb
#UTILS="${PROGPATH}/../utils.sh"
UTILS=/usr/lib/nagios/plugins/utils.sh
if ! [[ -e ${UTILS} ]]; then
    echo "File '${UTILS}' does not exist, aborting!"
    exit 1
fi
. /usr/lib/nagios/plugins/utils.sh

VERBOSE=0

# some funcions
print_usage() {
    echo "Usage: ${PROGNAME} [-v|--verbose]"
    echo ""
}

print_help() {
    print_revision ${PROGNAME} ${REVISION}
    echo ""
    print_usage
    echo ""
    echo "This plugin checks if all bgp connections are established."
    echo ""
    support
    exit ${STATE_OK}
}

print_verbose() {
    if [[ ${VERBOSE} -eq 1 ]]; then
        echo $1
    fi
}

# get arguments
while [[ $# -ne 0 ]]; do
    case "$1" in
        -h|--help)
            print_help
            exit ${STATE_OK}
            ;;
        -V|--version)
            print_revision ${PROGNAME} ${REVISION}
            exit ${STATE_OK}
            ;;
        -v|--verbose)
            VERBOSE=1
            shift
            ;;
        *)
            echo "Unknown argument '$1', aborting!"
            exit ${STATE_UNKNOWN}
            ;;
    esac
done

# checks
if ! [[ -x /usr/sbin/birdc6 ]]; then
    echo "'birdc6' is not installed!"
    exit ${STATE_UNKNOWN}
fi

return_state=${STATE_OK}
message=''
critical_message=''
established=false

# do the work
while read LINE; do
    if [[ ${LINE} = -- ]]; then
        continue
    elif [[ ${LINE} =~ ^bgp ]]; then
        interface=${LINE%% *}
        if [[ ${LINE} =~ ^.*Established.*$ ]]; then
            established=true
        else
            established=false
            return_state=${STATE_CRITICAL}
        fi
    else
        gateway=${LINE##* }
        if ${established}; then
            message="${message}; ${interface} ${gateway}"
        else
            critical_message="${critical_message}; ${interface} ${gateway}"
        fi
        established=true
    fi
done <<< "$(sudo /usr/sbin/birdc6 show protocols all | grep -A 1 "^bgp")"

if [[ ${return_state} -eq ${STATE_OK} ]]; then
    #echo "BGP OK: "${string:1:${#string}-2}" ${message:2}"
    echo "BGP OK: ${message:2}"
    exit ${STATE_OK}
elif [[ ${return_state} -eq ${STATE_CRITICAL} ]]; then
    echo "BGP CRITICAL: ${critical_message:2}"
    exit ${STATE_CRITICAL}
else
    echo "BGP UNKNOWN"
    exit ${STATE_UNKNOWN}
fi

# vim: ts=4 sw=4 et filetype=sh
