#!/bin/bash

HOST=""
USER="wakeup"
PBX_HOST="pbx.profitbricks.com"
NOTIFICATION_TYPE=""

print_usage() {
    echo "Usage: $0 -H|--Host HOST -p|--phone-number PHONE_NR"
    echo "          -t|--type NOTIFICATION_TYPE"
    echo
    echo "  HOST               Host which is down"
    echo "  PHONE_NR           Phone number to call, default: ${PHONE_NR}"
    echo "  NOTIFICATION_TYPE  type of notification (see Icinga documentation)"
}

print_help() {
    echo "Call support (or a given phone number) if given host is a pserver"
    echo ""
    print_usage
}

print_verbose() {
    if [[ ${VERBOSE} -eq 1 ]]; then
        echo $1
    fi
}


# get arguments
while [[ $# -ne 0 ]]; do
    case "$1" in
        -h|--help)
            print_help
            exit 0
            ;;
        -v|--verbose)
            VERBOSE=1
            shift
            ;;
        -H|--Host)
            HOST=$2
            shift 2
            ;;
        -p|--phone-number)
            PHONE_NR=$2
            shift 2
            ;;
        -t|--type)
            NOTIFICATION_TYPE=$2
            shift 2
            ;;
        *)
            echo "Unknown argument '$1', aborting!"
            exit 1
            ;;
    esac
done

# only alert on problem (not on acknowledgements)
if ! [[ ${NOTIFICATION_TYPE} == PROBLEM ]]; then
    echo "Notification type is not 'PROBLEM', don't alert."
    exit 0
fi

# check if hostname is given
if [[ -z ${HOST} ]]; then
    echo "No HOSTNAME given!"
    echo ""
    print_usage
    exit 1
fi

#if ! [[ ${HOST} =~ ^pserver.*$ ]]; then
#    echo "Host '${HOST}' is no P-Server"
#    exit 0
#fi

# check if phone number is given
if [[ -z ${PHONE_NR} ]]; then
    echo "No PHONE_NR given!"
    echo ""
    print_usage
    exit 1
fi

# manipulate HOST for better understanding of the phone call
if [[ ${HOST} =~ ^pserver.*$ ]]; then
    HOST="${HOST/p/p-}"
fi

ssh ${USER}@${PBX_HOST} screen -d -m pb-wakeupcall ${PHONE_NR} "Host ${HOST} is down."
