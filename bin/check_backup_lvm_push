#!/bin/bash

set -e -o pipefail

while getopts ":v" opt; do
    case "${opt}" in
        v) #verbose
            set -x
            VERBOSE_PARM="-v"
            ;;
    esac
done

# name of file being executed - used in logger functions
basename=${0##*/}

GIT_URL="git@gitlab.pb.local:storage/lvm-backup"
GIT_BRANCH=$(hostname -s)
BACKUP_DIR=/var/lib/backup-lvm/

# source defaults
[[ -r /etc/default/backup-lvm ]] && . /etc/default/backup-lvm

# error() for display error and log
error() {
    logger -s -t ${basename} -p err "error: ${@}"
}

# warning
warning() {
    logger -s -t ${basename} -p warning "warning: ${@}"
}


# get values
if ! LOCAL_HEAD=$(git --git-dir=${BACKUP_DIR}/.git/ rev-parse HEAD >&2); then
    error "CRITICAL: local git command rev-parse HEAD failed, retval: ${?}"
    error "${LOCAL_HEAD}"
    exit 2
fi
if ! REMOTE_HEAD=$(git --git-dir=${BACKUP_DIR}/.git/ ls-remote --heads origin ${GIT_BRANCH} | awk '{ print $1 }' >&2); then
    warning "WARNING: remote git command ls-remote --heads origin ${GIT_BRANCH} failed, retval: ${?}"
    warning "${REMOTE_HEAD}"
    exit 1
fi 

# check + compare values
if [[ "${LOCAL_HEAD}" =~ ^[a-z0-9]$ ]] && [[ "${REMOTE_HEAD}" =~ ^[a-z0-9]$ ]]; then
    if [[ "${LOCAL_HEAD}" == "${REMOTE_HEAD}" ]]; then
        echo "OK - local and remote git repository have same HEAD"
        exit 0
    else
        echo "WARNING - local (${LOCAL_HEAD}) and remote (${REMOTE_HEAD}) HEAD do not match" 
        exit 2
    fi
else
    echo "UNKNOWN - could not compare local (${LOCAL_HEAD}) and remote (${REMOTE_HEAD}) HEAD" 
    exit 3
fi
